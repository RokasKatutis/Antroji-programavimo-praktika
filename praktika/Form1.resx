<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>